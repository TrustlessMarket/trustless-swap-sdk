{"code":"import JSBI from 'jsbi';\r\nexport var TradeType;\r\n(function (TradeType) {\r\n    TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\r\n    TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\r\n})(TradeType || (TradeType = {}));\r\nexport var Rounding;\r\n(function (Rounding) {\r\n    Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\r\n    Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\r\n    Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\r\n})(Rounding || (Rounding = {}));\r\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\r\nexport var FeeAmount;\r\n(function (FeeAmount) {\r\n    FeeAmount[FeeAmount[\"LOWEST\"] = 100] = \"LOWEST\";\r\n    FeeAmount[FeeAmount[\"LOW\"] = 500] = \"LOW\";\r\n    FeeAmount[FeeAmount[\"MEDIUM\"] = 3000] = \"MEDIUM\";\r\n    FeeAmount[FeeAmount[\"HIGH\"] = 10000] = \"HIGH\";\r\n})(FeeAmount || (FeeAmount = {}));\r\n/**\r\n * The default factory tick spacings by fee amount.\r\n */\r\nexport const TICK_SPACINGS = {\r\n    [FeeAmount.LOWEST]: 1,\r\n    [FeeAmount.LOW]: 10,\r\n    [FeeAmount.MEDIUM]: 60,\r\n    [FeeAmount.HIGH]: 200\r\n};\r\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\r\nexport const POOL_INIT_CODE_HASH = '0x04759a882be3a45ff74719de5c82516d29af4b3480d076fc0c57b2fdab813bc7';\r\nexport const FACTORY_ADDRESS = '0x9D921bF7460d1FcfF77d88edd4D34cD1e2F56BDc';\r\n// ABI's\r\n// ABI's\r\nexport const ERC20_ABI = [\r\n    // Read-Only Functions\r\n    'function balanceOf(address owner) view returns (uint256)',\r\n    'function decimals() view returns (uint8)',\r\n    'function symbol() view returns (string)',\r\n    'function allowance(address owner, address spender) external view returns (uint256)',\r\n    // Authenticated Functions\r\n    'function transfer(address to, uint amount) returns (bool)',\r\n    'function approve(address _spender, uint256 _value) returns (bool)',\r\n    // Events\r\n    'event Transfer(address indexed from, address indexed to, uint amount)',\r\n];\r\nexport const WETH_ABI = [\r\n    // Wrap ETH\r\n    'function deposit() payable',\r\n    // Unwrap ETH\r\n    'function withdraw(uint wad) public',\r\n];\r\nexport const NONFUNGIBLE_POSITION_MANAGER_ABI = [\r\n    // Read-Only Functions\r\n    'function balanceOf(address _owner) view returns (uint256)',\r\n    'function tokenOfOwnerByIndex(address _owner, uint256 _index) view returns (uint256)',\r\n    'function tokenURI(uint256 tokenId) view returns (string memory)',\r\n    'function positions(uint256 tokenId) external view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)',\r\n];\r\n// Transactions\r\nexport const MAX_FEE_PER_GAS = 100000000000;\r\nexport const MAX_PRIORITY_FEE_PER_GAS = 100000000000;\r\nexport const TOKEN_AMOUNT_TO_APPROVE_FOR_TRANSFER = 2000;\r\n//# sourceMappingURL=constants.js.map","references":["/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/node_modules/jsbi/jsbi.d.ts"],"map":"{\"version\":3,\"file\":\"constants.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/constants.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAKvB,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,uDAAW,CAAA;IACX,yDAAY,CAAA;AACd,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,mDAAU,CAAA;IACV,yDAAa,CAAA;IACb,+CAAQ,CAAA;AACV,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oEAAoE,CAAC,CAAA;AAC3G,MAAM,CAAN,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,+CAAY,CAAA;IACZ,yCAAS,CAAA;IACT,gDAAa,CAAA;IACb,6CAAY,CAAA;AACd,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAsC;IAC9D,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;IACrB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE;IACnB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE;IACtB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG;CACtB,CAAA;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,4CAA4C,CAAA;AACxE,MAAM,CAAC,MAAM,mBAAmB,GAAG,oEAAoE,CAAA;AAEvG,MAAM,CAAC,MAAM,eAAe,GAAG,4CAA4C,CAAA;AAE3E,QAAQ;AAER,QAAQ;AAER,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,sBAAsB;IACtB,0DAA0D;IAC1D,0CAA0C;IAC1C,yCAAyC;IACzC,oFAAoF;IAEpF,0BAA0B;IAC1B,2DAA2D;IAC3D,mEAAmE;IAEnE,SAAS;IACT,uEAAuE;CACxE,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG;IACtB,WAAW;IACX,4BAA4B;IAE5B,aAAa;IACb,oCAAoC;CACrC,CAAA;AAED,MAAM,CAAC,MAAM,gCAAgC,GAAG;IAC9C,sBAAsB;IACtB,2DAA2D;IAC3D,qFAAqF;IACrF,iEAAiE;IAEjE,2SAA2S;CAC5S,CAAA;AAED,eAAe;AAEf,MAAM,CAAC,MAAM,eAAe,GAAG,YAAY,CAAA;AAC3C,MAAM,CAAC,MAAM,wBAAwB,GAAG,YAAY,CAAA;AACpD,MAAM,CAAC,MAAM,oCAAoC,GAAG,IAAI,CAAA\"}","dts":{"name":"/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/constants.d.ts","writeByteOrderMark":false,"text":"import JSBI from 'jsbi';\r\nexport declare type BigintIsh = JSBI | string | number;\r\nexport declare enum TradeType {\r\n    EXACT_INPUT = 0,\r\n    EXACT_OUTPUT = 1\r\n}\r\nexport declare enum Rounding {\r\n    ROUND_DOWN = 0,\r\n    ROUND_HALF_UP = 1,\r\n    ROUND_UP = 2\r\n}\r\nexport declare const MaxUint256: JSBI;\r\nexport declare enum FeeAmount {\r\n    LOWEST = 100,\r\n    LOW = 500,\r\n    MEDIUM = 3000,\r\n    HIGH = 10000\r\n}\r\n/**\r\n * The default factory tick spacings by fee amount.\r\n */\r\nexport declare const TICK_SPACINGS: {\r\n    [amount in FeeAmount]: number;\r\n};\r\nexport declare const ADDRESS_ZERO = \"0x0000000000000000000000000000000000000000\";\r\nexport declare const POOL_INIT_CODE_HASH = \"0x04759a882be3a45ff74719de5c82516d29af4b3480d076fc0c57b2fdab813bc7\";\r\nexport declare const FACTORY_ADDRESS = \"0x9D921bF7460d1FcfF77d88edd4D34cD1e2F56BDc\";\r\nexport declare const ERC20_ABI: string[];\r\nexport declare const WETH_ABI: string[];\r\nexport declare const NONFUNGIBLE_POSITION_MANAGER_ABI: string[];\r\nexport declare const MAX_FEE_PER_GAS = 100000000000;\r\nexport declare const MAX_PRIORITY_FEE_PER_GAS = 100000000000;\r\nexport declare const TOKEN_AMOUNT_TO_APPROVE_FOR_TRANSFER = 2000;\r\n"}}
