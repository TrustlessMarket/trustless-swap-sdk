{"code":"import { Token } from './entities/token';\r\nimport { FeeAmount } from './constants';\r\nexport var Environment;\r\n(function (Environment) {\r\n    Environment[Environment[\"LOCAL\"] = 0] = \"LOCAL\";\r\n    Environment[Environment[\"TESTNET\"] = 1] = \"TESTNET\";\r\n    Environment[Environment[\"MAINNET\"] = 2] = \"MAINNET\";\r\n})(Environment || (Environment = {}));\r\nexport var WalletType;\r\n(function (WalletType) {\r\n    WalletType[WalletType[\"EXTENSION\"] = 0] = \"EXTENSION\";\r\n    WalletType[WalletType[\"PRIVATEKEY\"] = 1] = \"PRIVATEKEY\";\r\n})(WalletType || (WalletType = {}));\r\n// Example Configuration\r\nexport const testnetConfig = {\r\n    env: Environment.TESTNET,\r\n    API_ROOT: \"https://stag-dex-api.fprotocol.io\",\r\n    rpc: 'https://l2-node.regtest.trustless.computer',\r\n    POOL_FACTORY_CONTRACT_ADDRESS: '0x9D921bF7460d1FcfF77d88edd4D34cD1e2F56BDc',\r\n    QUOTER_CONTRACT_ADDRESS: '0xD228465a3E1C64Ed6C627a87132dc6b1552cd0F2',\r\n    SWAP_ROUTER_ADDRESS: '0x3a3885F7a03beC1F4A1c00f155A5d57168fDE205',\r\n    WETH_CONTRACT_ADDRESS: '0x0fba66555b74f13809862bd6f15fffa0a0237059',\r\n    TC_CONTRACT_ADDRESS: '0x8b485d217096cE20A09AF11D15ccCc63323C1469',\r\n    NONFUNGIBLE_POSITION_MANAGER_CONTRACT_ADDRESS: '0xe6Dc33d13200f0A9CF7cFC7B484aE1891D934234',\r\n    tokens_list: [\r\n        new Token(1, '0x0FBa66555B74F13809862BD6f15FffA0A0237059', 18, 'WETH', 'Wrapped Ether'),\r\n        new Token(1, '0xB68BB951883A7c5f24C7e2Cca8d9A68CFC606F41', 18, 'USDC', 'USD//C'),\r\n        new Token(1, '0x1d45c32C97707C916b350042CEAC2164fb6D00A1', 18, 'WBTC', 'Wrapped BTC')\r\n    ]\r\n};\r\nexport const mainnetConfig = {\r\n    env: Environment.MAINNET,\r\n    rpc: 'https://node.l2.trustless.computer',\r\n    API_ROOT: \"https://dex-api.fprotocol.io\",\r\n    POOL_FACTORY_CONTRACT_ADDRESS: '0x1d12AC81710da54A50e2e9095E20dB2D915Ce3C8',\r\n    QUOTER_CONTRACT_ADDRESS: '0x17f8275c3842f977d42Ab09c35042ddE4ec55856',\r\n    SWAP_ROUTER_ADDRESS: '0xB3eAc9358462356B231801309f553c48667B2CB7',\r\n    WETH_CONTRACT_ADDRESS: '0x43bda480de297a14cec95bfb1c6a313615f809ef',\r\n    NONFUNGIBLE_POSITION_MANAGER_CONTRACT_ADDRESS: '0x7D9D03317e90E477180dcFE28c75f8007Ecc6031',\r\n    TC_CONTRACT_ADDRESS: '0xad771ed0f8c5df06d21a7eda3b00acd6688dd532',\r\n    tokens_list: [\r\n        new Token(1, '0x43bda480de297a14cec95bfb1c6a313615f809ef', 18, 'WETH', 'Wrapped Ether'),\r\n        new Token(1, '0xe8B280Ebb57bE03adC9d87e207BCD689EfADef96', 18, 'USDC', 'USD//C'),\r\n        new Token(1, '0x111808AbE352c8003e0eFfcc04998EaB26Cebe3c', 18, 'WBTC', 'Wrapped BTC'),\r\n        new Token(1, '0xdb380837095fbfAA4Ea65e7388Ef35A5FCad0334', 18, 'token1', 'token1'),\r\n        new Token(1, '0xBBA317FD4f2Cc8b8906D77cE410691dD9a6ee64F', 18, 'tk3', 'tk3')\r\n    ]\r\n};\r\nexport let CurrentConfig = mainnetConfig;\r\nexport let tokenSwap = {\r\n    in: CurrentConfig.tokens_list[0],\r\n    amountIn: 1,\r\n    out: CurrentConfig.tokens_list[1],\r\n    poolFee: FeeAmount.MEDIUM,\r\n};\r\nexport let tokenLiquidity = {\r\n    token0: CurrentConfig.tokens_list[3],\r\n    token0Amount: 0.5,\r\n    token1: CurrentConfig.tokens_list[4],\r\n    token1Amount: 0.2,\r\n    poolFee: FeeAmount.MEDIUM,\r\n    fractionToRemove: 1,\r\n    fractionToAdd: 0.5,\r\n};\r\nexport function setTOkenSwap(inputToken, amountIn, outToken, poolFee) {\r\n    tokenSwap = {\r\n        in: inputToken,\r\n        amountIn: amountIn,\r\n        out: outToken,\r\n        poolFee: poolFee,\r\n    };\r\n}\r\nexport function setTOkenIn(inputToken) {\r\n    tokenSwap[\"in\"] = inputToken;\r\n}\r\nexport function setTOkenOut(outToken) {\r\n    tokenSwap[\"out\"] = outToken;\r\n}\r\nexport function resetTOkenSwap() {\r\n    tokenSwap = {\r\n        in: CurrentConfig.tokens_list[0],\r\n        amountIn: 1,\r\n        out: CurrentConfig.tokens_list[1],\r\n        poolFee: FeeAmount.MEDIUM,\r\n    };\r\n}\r\nexport function choiceConFig(environment) {\r\n    if (environment == Environment.TESTNET) {\r\n        CurrentConfig = testnetConfig;\r\n    }\r\n    else if (environment == Environment.MAINNET) {\r\n        CurrentConfig = mainnetConfig;\r\n    }\r\n    resetTOkenSwap();\r\n}\r\nexport let CurrentWallet = {\r\n    address: '',\r\n    privateKey: '',\r\n    type: WalletType.PRIVATEKEY,\r\n};\r\nexport function changeWallet(type, address, privateKey) {\r\n    CurrentWallet.address = address;\r\n    CurrentWallet.privateKey = privateKey;\r\n    CurrentWallet.type = type;\r\n}\r\n//# sourceMappingURL=config.js.map","references":["/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/token.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/constants.ts"],"map":"{\"version\":3,\"file\":\"config.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/config.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/config.d.ts","writeByteOrderMark":false,"text":"import { Token } from './entities/token';\r\nimport { FeeAmount } from './constants';\r\nexport declare enum Environment {\r\n    LOCAL = 0,\r\n    TESTNET = 1,\r\n    MAINNET = 2\r\n}\r\nexport declare enum WalletType {\r\n    EXTENSION = 0,\r\n    PRIVATEKEY = 1\r\n}\r\nexport interface EnvironmentConfig {\r\n    env: Environment;\r\n    rpc: string;\r\n    API_ROOT: string;\r\n    POOL_FACTORY_CONTRACT_ADDRESS: string;\r\n    QUOTER_CONTRACT_ADDRESS: string;\r\n    SWAP_ROUTER_ADDRESS: string;\r\n    WETH_CONTRACT_ADDRESS: string;\r\n    NONFUNGIBLE_POSITION_MANAGER_CONTRACT_ADDRESS: string;\r\n    TC_CONTRACT_ADDRESS: string;\r\n    tokens_list: Array<Token>;\r\n}\r\nexport declare const testnetConfig: EnvironmentConfig;\r\nexport declare const mainnetConfig: EnvironmentConfig;\r\nexport declare let CurrentConfig: EnvironmentConfig;\r\nexport declare let tokenSwap: {\r\n    in: Token;\r\n    amountIn: number;\r\n    out: Token;\r\n    poolFee: FeeAmount;\r\n};\r\nexport declare let tokenLiquidity: {\r\n    token0: Token;\r\n    token0Amount: number;\r\n    token1: Token;\r\n    token1Amount: number;\r\n    poolFee: FeeAmount;\r\n    fractionToRemove: number;\r\n    fractionToAdd: number;\r\n};\r\nexport declare function setTOkenSwap(inputToken: Token, amountIn: number, outToken: Token, poolFee: number): void;\r\nexport declare function setTOkenIn(inputToken: Token): void;\r\nexport declare function setTOkenOut(outToken: Token): void;\r\nexport declare function resetTOkenSwap(): void;\r\nexport declare function choiceConFig(environment: number): void;\r\nexport interface walletConfig {\r\n    address: string;\r\n    privateKey: string;\r\n    type: WalletType;\r\n}\r\nexport declare let CurrentWallet: walletConfig;\r\nexport declare function changeWallet(type: WalletType, address: string, privateKey: string): void;\r\n"}}
