{"code":"import { CurrencyAmount } from './entities/fractions/currencyAmount';\r\nimport { validateAndParseAddress } from './utils/validateAndParseAddress';\r\nimport { CurrentConfig } from './config';\r\nimport JSBI from 'jsbi';\r\nimport invariant from 'tiny-invariant';\r\nimport { Position } from './entities/position';\r\nimport { ONE, ZERO } from './internalConstants';\r\nimport { toHex } from './utils/calldata';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport INonfungiblePositionManager from './Nonfungible.json';\r\nimport { SelfPermit } from './selfPermit';\r\nimport { ADDRESS_ZERO } from './constants';\r\nimport { Multicall } from './multicall';\r\nimport { Payments } from './payments';\r\nimport { fromReadableAmount } from './utils1';\r\nconst MaxUint128 = toHex(JSBI.subtract(JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(128)), JSBI.BigInt(1)));\r\n// type guard\r\nfunction isMint(options) {\r\n    return Object.keys(options).some(k => k === 'recipient');\r\n}\r\nexport class NonfungiblePositionManager {\r\n    /**\r\n     * Cannot be constructed.\r\n     */\r\n    constructor() { }\r\n    static encodeCreate(pool) {\r\n        return NonfungiblePositionManager.INTERFACE.encodeFunctionData('createAndInitializePoolIfNecessary', [\r\n            pool.token0.address,\r\n            pool.token1.address,\r\n            pool.fee,\r\n            toHex(pool.sqrtRatioX96)\r\n        ]);\r\n    }\r\n    static createCallParameters(pool) {\r\n        return {\r\n            calldata: this.encodeCreate(pool),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static encodeCollectById(tokenId, account) {\r\n        const calldatas = [];\r\n        // collect\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [\r\n            {\r\n                tokenId,\r\n                recipient: account,\r\n                amount0Max: MaxUint128,\r\n                amount1Max: MaxUint128\r\n            }\r\n        ]));\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static encodeIncrease(tokenId, amount0Desired, amount1Desired, amount0Min, amount1Min, deadline) {\r\n        const calldatas = [];\r\n        // collect\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('increaseLiquidity', [\r\n            {\r\n                tokenId: tokenId,\r\n                amount0Desired: amount0Desired,\r\n                amount1Desired: amount1Desired,\r\n                amount0Min,\r\n                amount1Min,\r\n                deadline\r\n            }\r\n        ]));\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static encodeRemoveLiqidity(tokenId, liquidity, amount0Min, amount1Min, deadline, account) {\r\n        const calldatas = [];\r\n        // collect\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('decreaseLiquidity', [\r\n            {\r\n                tokenId: tokenId,\r\n                liquidity: liquidity,\r\n                amount0Min: amount0Min,\r\n                amount1Min: amount1Min,\r\n                deadline: deadline,\r\n            }\r\n        ]));\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [\r\n            {\r\n                tokenId,\r\n                recipient: account,\r\n                amount0Max: MaxUint128,\r\n                amount1Max: MaxUint128\r\n            }\r\n        ]));\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static encodeRemovePosition(tokenId) {\r\n        const calldatas = [];\r\n        // collect\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('burn', [\r\n            {\r\n                tokenId: tokenId\r\n            }\r\n        ]));\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static addCallParametersCreate(isNewPool, fee, token0, token1, amountADesired, amountBDesired, lowerTick, upperTick, amount0Min, amount1Min, currentPrice, account, deadline) {\r\n        const calldatas = [];\r\n        let value = toHex(0);\r\n        if (!isNewPool) {\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [\r\n                {\r\n                    token0: token0,\r\n                    token1: token1,\r\n                    fee: fee,\r\n                    tickLower: lowerTick,\r\n                    tickUpper: upperTick,\r\n                    amount0Desired: fromReadableAmount(amountADesired, 18),\r\n                    amount1Desired: fromReadableAmount(amountBDesired, 18),\r\n                    amount0Min: amount0Min,\r\n                    amount1Min: amount1Min,\r\n                    recipient: account,\r\n                    deadline: deadline,\r\n                }\r\n            ]));\r\n        }\r\n        else {\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('createAndInitializePoolIfNecessary', [\r\n                token0,\r\n                token1,\r\n                fee,\r\n                currentPrice,\r\n            ]));\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [\r\n                {\r\n                    token0: token0,\r\n                    token1: token1,\r\n                    fee: fee,\r\n                    tickLower: lowerTick,\r\n                    tickUpper: upperTick,\r\n                    amount0Desired: fromReadableAmount(amountADesired, 18),\r\n                    amount1Desired: fromReadableAmount(amountBDesired, 18),\r\n                    amount0Min: amount0Min,\r\n                    amount1Min: amount1Min,\r\n                    recipient: account,\r\n                    deadline: deadline,\r\n                }\r\n            ]));\r\n        }\r\n        if (token0.toLowerCase() === CurrentConfig.TC_CONTRACT_ADDRESS.toLowerCase() || token1.toLowerCase() === CurrentConfig.TC_CONTRACT_ADDRESS.toLowerCase()) {\r\n            const wrappedValue = token0.toLowerCase() === CurrentConfig.TC_CONTRACT_ADDRESS.toLowerCase() ? fromReadableAmount(amountADesired, 18) : fromReadableAmount(amountBDesired, 18);\r\n            if (wrappedValue.gt(0)) {\r\n                calldatas.push(Payments.encodeRefundETH());\r\n            }\r\n            value = toHex(wrappedValue.toString());\r\n        }\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value\r\n        };\r\n    }\r\n    static addCallParameters(position, options) {\r\n        invariant(JSBI.greaterThan(position.liquidity, ZERO), 'ZERO_LIQUIDITY');\r\n        const calldatas = [];\r\n        // get amounts\r\n        const { amount0: amount0Desired, amount1: amount1Desired } = position.mintAmounts;\r\n        // adjust for slippage\r\n        const minimumAmounts = position.mintAmountsWithSlippage(options.slippageTolerance);\r\n        const amount0Min = toHex(minimumAmounts.amount0);\r\n        const amount1Min = toHex(minimumAmounts.amount1);\r\n        const deadline = toHex(options.deadline);\r\n        // create pool if needed\r\n        if (isMint(options) && options.createPool) {\r\n            calldatas.push(this.encodeCreate(position.pool));\r\n        }\r\n        // permits if necessary\r\n        if (options.token0Permit) {\r\n            calldatas.push(SelfPermit.encodePermit(position.pool.token0, options.token0Permit));\r\n        }\r\n        if (options.token1Permit) {\r\n            calldatas.push(SelfPermit.encodePermit(position.pool.token1, options.token1Permit));\r\n        }\r\n        // mint\r\n        if (isMint(options)) {\r\n            const recipient = validateAndParseAddress(options.recipient);\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [\r\n                {\r\n                    token0: position.pool.token0.address,\r\n                    token1: position.pool.token1.address,\r\n                    fee: position.pool.fee,\r\n                    tickLower: position.tickLower,\r\n                    tickUpper: position.tickUpper,\r\n                    amount0Desired: toHex(amount0Desired),\r\n                    amount1Desired: toHex(amount1Desired),\r\n                    amount0Min,\r\n                    amount1Min,\r\n                    recipient,\r\n                    deadline\r\n                }\r\n            ]));\r\n        }\r\n        else {\r\n            // increase\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('increaseLiquidity', [\r\n                {\r\n                    tokenId: toHex(options.tokenId),\r\n                    amount0Desired: toHex(amount0Desired),\r\n                    amount1Desired: toHex(amount1Desired),\r\n                    amount0Min,\r\n                    amount1Min,\r\n                    deadline\r\n                }\r\n            ]));\r\n        }\r\n        let value = toHex(0);\r\n        if (options.useNative) {\r\n            const wrapped = options.useNative.wrapped;\r\n            invariant(position.pool.token0.equals(wrapped) || position.pool.token1.equals(wrapped), 'NO_WETH');\r\n            const wrappedValue = position.pool.token0.equals(wrapped) ? amount0Desired : amount1Desired;\r\n            // we only need to refund if we're actually sending ETH\r\n            if (JSBI.greaterThan(wrappedValue, ZERO)) {\r\n                calldatas.push(Payments.encodeRefundETH());\r\n            }\r\n            value = toHex(wrappedValue);\r\n        }\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value\r\n        };\r\n    }\r\n    static encodeCollect(options) {\r\n        const calldatas = [];\r\n        const tokenId = toHex(options.tokenId);\r\n        const involvesETH = options.expectedCurrencyOwed0.currency.isNative || options.expectedCurrencyOwed1.currency.isNative;\r\n        const recipient = validateAndParseAddress(options.recipient);\r\n        // collect\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [\r\n            {\r\n                tokenId,\r\n                recipient: involvesETH ? ADDRESS_ZERO : recipient,\r\n                amount0Max: MaxUint128,\r\n                amount1Max: MaxUint128\r\n            }\r\n        ]));\r\n        if (involvesETH) {\r\n            const ethAmount = options.expectedCurrencyOwed0.currency.isNative\r\n                ? options.expectedCurrencyOwed0.quotient\r\n                : options.expectedCurrencyOwed1.quotient;\r\n            const token = options.expectedCurrencyOwed0.currency.isNative\r\n                ? options.expectedCurrencyOwed1.currency\r\n                : options.expectedCurrencyOwed0.currency;\r\n            const tokenAmount = options.expectedCurrencyOwed0.currency.isNative\r\n                ? options.expectedCurrencyOwed1.quotient\r\n                : options.expectedCurrencyOwed0.quotient;\r\n            calldatas.push(Payments.encodeUnwrapWETH9(ethAmount, recipient));\r\n            calldatas.push(Payments.encodeSweepToken(token, tokenAmount, recipient));\r\n        }\r\n        return calldatas;\r\n    }\r\n    static collectCallParameters(options) {\r\n        const calldatas = NonfungiblePositionManager.encodeCollect(options);\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    /**\r\n     * Produces the calldata for completely or partially exiting a position\r\n     * @param position The position to exit\r\n     * @param options Additional information necessary for generating the calldata\r\n     * @returns The call parameters\r\n     */\r\n    static removeCallParameters(position, options) {\r\n        const calldatas = [];\r\n        const deadline = toHex(options.deadline);\r\n        const tokenId = toHex(options.tokenId);\r\n        // construct a partial position with a percentage of liquidity\r\n        const partialPosition = new Position({\r\n            pool: position.pool,\r\n            liquidity: options.liquidityPercentage.multiply(position.liquidity).quotient,\r\n            tickLower: position.tickLower,\r\n            tickUpper: position.tickUpper\r\n        });\r\n        invariant(JSBI.greaterThan(partialPosition.liquidity, ZERO), 'ZERO_LIQUIDITY');\r\n        // slippage-adjusted underlying amounts\r\n        const { amount0: amount0Min, amount1: amount1Min } = partialPosition.burnAmountsWithSlippage(options.slippageTolerance);\r\n        if (options.permit) {\r\n            calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('permit', [\r\n                validateAndParseAddress(options.permit.spender),\r\n                tokenId,\r\n                toHex(options.permit.deadline),\r\n                options.permit.v,\r\n                options.permit.r,\r\n                options.permit.s\r\n            ]));\r\n        }\r\n        // remove liquidity\r\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('decreaseLiquidity', [\r\n            {\r\n                tokenId,\r\n                liquidity: toHex(partialPosition.liquidity),\r\n                amount0Min: toHex(amount0Min),\r\n                amount1Min: toHex(amount1Min),\r\n                deadline\r\n            }\r\n        ]));\r\n        const { expectedCurrencyOwed0, expectedCurrencyOwed1, ...rest } = options.collectOptions;\r\n        calldatas.push(...NonfungiblePositionManager.encodeCollect({\r\n            tokenId: toHex(options.tokenId),\r\n            // add the underlying value to the expected currency already owed\r\n            expectedCurrencyOwed0: expectedCurrencyOwed0.add(CurrencyAmount.fromRawAmount(expectedCurrencyOwed0.currency, amount0Min)),\r\n            expectedCurrencyOwed1: expectedCurrencyOwed1.add(CurrencyAmount.fromRawAmount(expectedCurrencyOwed1.currency, amount1Min)),\r\n            ...rest\r\n        }));\r\n        if (options.liquidityPercentage.equalTo(ONE)) {\r\n            if (options.burnToken) {\r\n                calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('burn', [tokenId]));\r\n            }\r\n        }\r\n        else {\r\n            invariant(options.burnToken !== true, 'CANNOT_BURN');\r\n        }\r\n        return {\r\n            calldata: Multicall.encodeMulticall(calldatas),\r\n            value: toHex(0)\r\n        };\r\n    }\r\n    static safeTransferFromParameters(options) {\r\n        const recipient = validateAndParseAddress(options.recipient);\r\n        const sender = validateAndParseAddress(options.sender);\r\n        let calldata;\r\n        if (options.data) {\r\n            calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256,bytes)', [sender, recipient, toHex(options.tokenId), options.data]);\r\n        }\r\n        else {\r\n            calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256)', [\r\n                sender,\r\n                recipient,\r\n                toHex(options.tokenId)\r\n            ]);\r\n        }\r\n        return {\r\n            calldata: calldata,\r\n            value: toHex(0)\r\n        };\r\n    }\r\n}\r\nNonfungiblePositionManager.INTERFACE = new Interface(INonfungiblePositionManager);\r\n//# sourceMappingURL=nonfungiblePositionManager.js.map","references":["/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/constants.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/fractions/percent.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/currency.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/token.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/fractions/currencyAmount.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/utils/validateAndParseAddress.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/nativeCurrency.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/config.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/node_modules/jsbi/jsbi.d.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/position.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/internalConstants.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/utils/calldata.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/node_modules/@ethersproject/abi/lib/index.d.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/Nonfungible.json","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/selfPermit.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/constants.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/entities/index.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/multicall.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/payments.ts","/Users/tuan/WebstormProjects/trustless-swap-sdk/trustless-swap-sdk/src/utils1.ts"],"map":"{\"version\":3,\"file\":\"nonfungiblePositionManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/nonfungiblePositionManager.ts\"],\"names\":[],\"mappings\":\"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\"}"}
