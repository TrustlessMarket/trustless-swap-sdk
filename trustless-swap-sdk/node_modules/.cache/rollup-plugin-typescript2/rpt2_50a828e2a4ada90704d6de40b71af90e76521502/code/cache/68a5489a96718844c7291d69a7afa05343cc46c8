{"code":"import JSBI from 'jsbi';\r\nimport { sqrt } from './sqrt';\r\n/**\r\n * Returns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0\r\n * @param amount1 The numerator amount i.e., the amount of token1\r\n * @param amount0 The denominator amount i.e., the amount of token0\r\n * @returns The sqrt ratio\r\n */\r\nexport function encodeSqrtRatioX96(amount1, amount0) {\r\n    const numerator = JSBI.leftShift(JSBI.BigInt(amount1), JSBI.BigInt(192));\r\n    const denominator = JSBI.BigInt(amount0);\r\n    const ratioX192 = JSBI.divide(numerator, denominator);\r\n    return sqrt(ratioX192);\r\n}\r\n//# sourceMappingURL=encodeSqrtRatioX96.js.map","references":["/Users/macbookpro/trustless-computer/trustless-swap-sdk/trustless-swap-sdk/node_modules/jsbi/jsbi.d.ts","/Users/macbookpro/trustless-computer/trustless-swap-sdk/trustless-swap-sdk/src/constants.ts","/Users/macbookpro/trustless-computer/trustless-swap-sdk/trustless-swap-sdk/src/utils/sqrt.ts"],"map":"{\"version\":3,\"file\":\"encodeSqrtRatioX96.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/encodeSqrtRatioX96.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAEvB,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAA;AAG7B;;;;;GAKG;AAEH,MAAM,UAAU,kBAAkB,CAAC,OAAkB,EAAE,OAAkB;IACvE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;IACxE,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IACxC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;IACrD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAA;AACxB,CAAC\"}"}
